definitions:
  models.Post:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      title:
        type: string
      user_id:
        type: integer
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
  posts.CreatePostDto:
    properties:
      content:
        type: string
      title:
        type: string
      user_id:
        type: integer
    required:
    - content
    - title
    - user_id
    type: object
  response.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  users.CreateUserDto:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
info:
  contact:
    email: bogomolovs693@gmail.com
  description: This is my first Go API
  title: Golang API Example
  version: "1.0"
paths:
  /{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Delete user
      tags:
      - users
  /posts:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Post'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get details of all posts
      tags:
      - posts
  /posts/by-user/{userId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Post'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get details users posts
      tags:
      - posts
  /posts/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create new post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/posts.CreatePostDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Create new post
      tags:
      - posts
  /posts/delete/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get details users posts
      tags:
      - posts
  /users:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: Get all users
      tags:
      - users
  /users/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get user details
      tags:
      - users
  /users/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create new user
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/users.CreateUserDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Create new user
      tags:
      - users
swagger: "2.0"
